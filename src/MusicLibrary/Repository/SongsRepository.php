<?php

/*
 * This file is part of the BlackSheep Music.
 *
 * (c) Stephan Langeweg <slurpie@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace BlackSheep\MusicLibrary\Repository;

use BlackSheep\MusicLibrary\Entity\SongEntity;
use DateTime;

/**
 * SongsRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SongsRepository extends AbstractRepository implements SongsRepositoryInterface
{
    /**
     * {@inheritdoc}
     */
    protected static function getEntityClass(): string
    {
        return SongEntity::class;
    }

    /**
     * @param array $songInfo
     *
     * @return null|SongEntity
     */
    public function needsImporting($songInfo): ?SongEntity
    {
        return $this->findOneBy(['mTime' => $songInfo['mTime'], 'path' => $songInfo['path']]);
    }

    /**
     * @return null|DateTime
     */
    public function lastImportDate(): ?DateTime
    {
        $lastCall = $this->findOneBy([], ['mTime' => 'DESC']);
        $lastImportDate = null;
        if ($lastCall !== null) {
            $lastImportDate = new DateTime();
            $lastImportDate->setTimestamp($lastCall->getMTime())->modify('-3 hours');
            unset($lastCall);
        }

        return $lastImportDate;
    }
}
